- Um código organizado é essencial para um bom produto, pelo fato de ajudar na execução de testes, manter padrões de desenvolvimento e permitir que funcionários possam trabalhar no seu código com facilidade.

- Um bom software deve ter alguns requisitos: funcionar bem, ter uma boa cobertura de testes, ser de fácil manutenção e que mantenha a segurança das informações.

- Paradigmas de programação são as classificações dos tipos de programação.
Paradigma declarativo: declarar propriedades e o resultado necessário (literalmente declarar o que deseja). LISP, Haskell.
Paradigma Imperativo: instruir a máquina para que ela realize os comandos necessários. Procedural (COBOL), POO (Simula).
MultiParadigma: paradigmas diferentes em uma mesma linguagem (Phyton, Java).

POO é tão usada pois a sua aplicação gera resultados significativos, ser suportada por muitas linguagens.

Primeira linguagem aplicando POO - Simula67 - Década de 60
POO busca representar fatos do mundo real, para aplicá-los em software

UML é uma padronização utilizada para representar um padrão de um código orientado a objeto, sendo entendível para diversas pessoas.
A raiz do UML é a programação orientada a objeto.

O UML visa mostrar o projeto de um sistema, utilizando diagramas, podendo funcionar de tais tipos: atividades, componentes individuais do sistema, funcionamento do sistema, interface de usuário.

Um uso incorreto do UML é projetá-lo para o projeto inteiro, e não para funcionalidades em partes, como também assumir que novatos possam projetar com UML, pois não tem os conceitos bem fixados sobre POO.